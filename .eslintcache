[{"C:\\Users\\carbo\\Downloads\\GomezStuff\\site\\gsi-wheel-configurator\\src\\index.js":"1","C:\\Users\\carbo\\Downloads\\GomezStuff\\site\\gsi-wheel-configurator\\src\\stickers.js":"2","C:\\Users\\carbo\\Downloads\\GomezStuff\\site\\gsi-wheel-configurator\\src\\App.js":"3","C:\\Users\\carbo\\Downloads\\GomezStuff\\site\\gsi-wheel-configurator\\src\\text-select.js":"4","C:\\Users\\carbo\\Downloads\\GomezStuff\\site\\gsi-wheel-configurator\\src\\icons.js":"5","C:\\Users\\carbo\\Downloads\\GomezStuff\\site\\gsi-wheel-configurator\\src\\config.js":"6","C:\\Users\\carbo\\Downloads\\GomezStuff\\site\\gsi-wheel-configurator\\src\\color-select.js":"7","C:\\Users\\carbo\\Downloads\\GomezStuff\\site\\gsi-wheel-configurator\\src\\reportWebVitals.js":"8","C:\\Users\\carbo\\Downloads\\GomezStuff\\site\\gsi-wheel-configurator\\src\\button\\button.js":"9","C:\\Users\\carbo\\Downloads\\GomezStuff\\site\\gsi-wheel-configurator\\src\\button\\button-editor.js":"10","C:\\Users\\carbo\\Downloads\\GomezStuff\\site\\gsi-wheel-configurator\\src\\rotary\\rotary.js":"11","C:\\Users\\carbo\\Downloads\\GomezStuff\\site\\gsi-wheel-configurator\\src\\rotary\\rotary-editor.js":"12","C:\\Users\\carbo\\Downloads\\GomezStuff\\site\\gsi-wheel-configurator\\src\\save.js":"13"},{"size":500,"mtime":1610157377893,"results":"14","hashOfConfig":"15"},{"size":1337,"mtime":1612725092479,"results":"16","hashOfConfig":"15"},{"size":11251,"mtime":1613071883735,"results":"17","hashOfConfig":"15"},{"size":501,"mtime":1613063436707,"results":"18","hashOfConfig":"15"},{"size":713,"mtime":1611504770437,"results":"19","hashOfConfig":"15"},{"size":23272,"mtime":1613084140293,"results":"20","hashOfConfig":"15"},{"size":580,"mtime":1612756045161,"results":"21","hashOfConfig":"15"},{"size":362,"mtime":1610157377893,"results":"22","hashOfConfig":"15"},{"size":7329,"mtime":1613070409581,"results":"23","hashOfConfig":"15"},{"size":2796,"mtime":1613082424495,"results":"24","hashOfConfig":"15"},{"size":4311,"mtime":1613070876144,"results":"25","hashOfConfig":"15"},{"size":2751,"mtime":1612762387705,"results":"26","hashOfConfig":"15"},{"size":2298,"mtime":1613079206627,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mvgpv9",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\carbo\\Downloads\\GomezStuff\\site\\gsi-wheel-configurator\\src\\index.js",[],"C:\\Users\\carbo\\Downloads\\GomezStuff\\site\\gsi-wheel-configurator\\src\\stickers.js",[],"C:\\Users\\carbo\\Downloads\\GomezStuff\\site\\gsi-wheel-configurator\\src\\App.js",["56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71"],"C:\\Users\\carbo\\Downloads\\GomezStuff\\site\\gsi-wheel-configurator\\src\\text-select.js",[],"C:\\Users\\carbo\\Downloads\\GomezStuff\\site\\gsi-wheel-configurator\\src\\icons.js",[],"C:\\Users\\carbo\\Downloads\\GomezStuff\\site\\gsi-wheel-configurator\\src\\config.js",[],"C:\\Users\\carbo\\Downloads\\GomezStuff\\site\\gsi-wheel-configurator\\src\\color-select.js",[],"C:\\Users\\carbo\\Downloads\\GomezStuff\\site\\gsi-wheel-configurator\\src\\reportWebVitals.js",[],"C:\\Users\\carbo\\Downloads\\GomezStuff\\site\\gsi-wheel-configurator\\src\\button\\button.js",["72","73","74","75","76","77"],"import React, { Component } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport * as Stickers from '../stickers';\r\nimport * as Icons from '../icons';\r\nimport { stickerTexts, config } from '../config'\r\nimport ButtonEditor from './button-editor';\r\n\r\nconst $StickerContainer = styled.div`\r\n    color: ${p => p.color};\r\n    top: ${p => p.y}px;\r\n    left: ${p => p.x}px;\r\n    position: absolute;\r\n`;\r\n\r\nconst $ButtonContainer = styled.div`\r\n    cursor: pointer;\r\n    position: absolute;\r\n    top: ${props => props.y};\r\n    left: ${props => props.x};\r\n\r\n    img {\r\n        position: absolute;\r\n\r\n        &.sticker {\r\n            height: 75px;\r\n        }\r\n\r\n        &.buttonGuard {\r\n            ${p =>\r\n        p.side === 'right' ?\r\n            css`\r\n                top: -9px;\r\n                left: -10px;\r\n            ` :\r\n            css`\r\n                top: -9px;\r\n                left: -9px;\r\n            `}\r\n        }\r\n    }\r\n\r\n    svg {\r\n        fill: currentColor;\r\n        overflow: visible;\r\n    }\r\n\r\n    &:hover {\r\n        ${$StickerContainer} > svg {\r\n            stroke: white !important;\r\n            stroke-width: 3px;\r\n            stroke-linejoin: round;\r\n        }\r\n    }\r\n`;\r\n\r\nconst $IconContainer = styled.div`\r\n    /* position: absolute; */\r\n    color: ${p => p.color};\r\n    ${p =>\r\n        p.row > 2 ?\r\n            css`\r\n    position: absolute;\r\n            ` :\r\n            css`\r\n    position: relative;\r\n            `}\r\n    ${p =>\r\n        p.row === 2 ?\r\n            css`\r\n    display: inline-block;\r\n            ` :\r\n            css`\r\n    display: block;\r\n            `}\r\n`;\r\n\r\nconst $TextContainer = styled.div`\r\n    position: absolute;\r\n    font-weight: 500;\r\n    text-transform: uppercase;\r\n    left: ${p => p.offsetX};\r\n    top: ${p => p.offsetY};\r\n    font-size: 12px;\r\n    text-align: center;\r\n    overflow: hidden;\r\n    color: ${p => p.color};\r\n    line-height: 11px;\r\n    width: ${p => p.width};\r\n    height: ${p => p.height};\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    ${p => p.row === 2 &&\r\n        css`\r\n            line-height: 14px;\r\n            justify-content: center;\r\n            ${$IconContainer} {\r\n                margin-left: 5px;\r\n            }\r\n    `}\r\n    ${p => p.row === 1 &&\r\n        css`\r\n            flex-direction: column;\r\n            ${p => p.stickerText !== 'pitLimit' &&\r\n                css`\r\n            `\r\n            }\r\n            `}\r\n`;\r\n\r\nclass GSIButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            active: false\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            side,\r\n            row,\r\n            buttonColor,\r\n            stickerColor,\r\n            textColor,\r\n            text,\r\n            setColor,\r\n            setText,\r\n            index,\r\n            id,\r\n            active,\r\n            setActive\r\n        } = this.props;\r\n        const sideText = side.charAt(0).toUpperCase() + side.slice(1);\r\n        const Sticker = Stickers[`Row${row}${sideText}`];\r\n        const Icon = Icons[stickerTexts[text].icon];\r\n        const height = config[`Row${row}`].stickerHeight;\r\n        const width = config[`Row${row}`].stickerWidth;\r\n        let offsetX;\r\n        let offsetY;\r\n        const buttonX = config[`Row${row}`][`button${sideText}`].x;\r\n        const buttonY = config[`Row${row}`][`button${sideText}`].y;\r\n\r\n        offsetX = config[`Row${row}`][`sticker${sideText}`].x;\r\n        offsetY = config[`Row${row}`][`sticker${sideText}`].y;\r\n\r\n        const textOffsetX = config[`Row${row}`][`text${sideText}`].x;\r\n        const textOffsetY = config[`Row${row}`][`text${sideText}`].y;\r\n\r\n        return (\r\n            <$ButtonContainer\r\n                x={buttonX}\r\n                y={buttonY}\r\n                side={side}\r\n                onClick={(e) => {\r\n                    !active ? setActive(id) : setActive(-1);\r\n                    e.stopPropagation();\r\n                }}\r\n                textColor={textColor\r\n                }>\r\n                <$StickerContainer\r\n                    color={stickerColor}\r\n                    x={offsetX}\r\n                    y={offsetY}>\r\n                    <Sticker\r\n                        height={height}\r\n                        width={width} />\r\n                </$StickerContainer>\r\n                <img className=\"buttonGuard\" src={`./images/buttons/button-guard.png`} alt='button-guard' />\r\n                <img src={`./images/buttons/button_${buttonColor.toLowerCase()}.png`} alt='button sticker'\r\n                style={{ width: '41px', height: '41px'}} />\r\n                <$TextContainer\r\n                    offsetX={textOffsetX}\r\n                    offsetY={textOffsetY}\r\n                    color={textColor.toLowerCase()}\r\n                    row={row}\r\n                    stickerText={text}\r\n                    width={config[`Row${row}`][`text${sideText}`].width}\r\n                    height={config[`Row${row}`][`text${sideText}`].height}>\r\n                    {row === 1 ? (\r\n                        <>\r\n                            <$IconContainer>\r\n                                <Icon height=\"15px\" width=\"15px\" color={textColor} />\r\n                            </$IconContainer>\r\n                            <div>\r\n                                {stickerTexts[text].text}\r\n                            </div>\r\n                        </>\r\n                    ) : (\r\n                            <>\r\n                                {row === 2 ? (\r\n                                    <>\r\n                                        <div>\r\n                                            {stickerTexts[text].text}\r\n                                        </div>\r\n                                        <$IconContainer>\r\n                                            <Icon height=\"15px\" width=\"15px\" color={textColor} />\r\n                                        </$IconContainer>\r\n                                    </>\r\n                                ) : (\r\n                                        <div>\r\n                                            {stickerTexts[text].text}\r\n                                        </div>\r\n                                    )}\r\n                            </>\r\n                        )\r\n                    }\r\n                </$TextContainer>\r\n                {\r\n                    row !== 1 && row !== 2 &&\r\n                    <$IconContainer\r\n                        row={row}\r\n                        posAbsolute={row !== 1}\r\n                        dispInline={row === 2}\r\n                        style={{ left: config[`Row${row}`][`icon${sideText}`].x, top: config[`Row${row}`][`icon${sideText}`].y }}>\r\n                        <Icon height=\"15px\" width=\"15px\" color={textColor} />\r\n                    </$IconContainer>\r\n                }\r\n                <ButtonEditor\r\n                    active={active}\r\n                    buttonColor={buttonColor}\r\n                    stickerColor={stickerColor}\r\n                    textColor={textColor}\r\n                    text={text}\r\n                    setColor={setColor}\r\n                    setText={setText}\r\n                    index={index}\r\n                    side={side} />\r\n            </$ButtonContainer >\r\n        );\r\n    }\r\n}\r\n\r\nexport default GSIButton;","C:\\Users\\carbo\\Downloads\\GomezStuff\\site\\gsi-wheel-configurator\\src\\button\\button-editor.js",["78","79","80","81","82"],"C:\\Users\\carbo\\Downloads\\GomezStuff\\site\\gsi-wheel-configurator\\src\\rotary\\rotary.js",["83","84","85","86"],"C:\\Users\\carbo\\Downloads\\GomezStuff\\site\\gsi-wheel-configurator\\src\\rotary\\rotary-editor.js",["87","88","89","90","91","92","93","94"],"import React, { Component } from 'react';\nimport styled, { css } from 'styled-components';\nimport * as Stickers from '../stickers';\nimport * as Icons from '../icons';\nimport ColorSelect from '../color-select';\nimport TextSelect from '../text-select';\nimport { funkyColors, rotaryColors, rotaryStickerColors, textColors, rotaryTexts } from '../config';\n\nconst $EditorContainer = styled.div`\n    position: absolute;\n    display: ${props => props.active ? 'block' : 'none'};\n    background-color: black;\n    border: 2px solid white;\n    border-radius: 6px;\n    padding: 16px;\n    z-index: 10;\n    min-width: 100px;\n    ${props => props.side === 'left' ? css`\n        right: 18px;\n        left: auto;\n    ` : css`\n        right: auto;\n        left: 60px;\n    `}\n`;\n\nconst $ButtonSelectGroup = styled.div`\n`;\n\nclass RotaryEditor extends Component {\n\n    render() {\n        const {\n            rotaryColor,\n            stickerColor,\n            textColor,\n            text,\n            active,\n            setColor,\n            setText,\n            index,\n            side,\n            id\n        } = this.props;\n        return (\n            <$EditorContainer active={active} side={side} onClick={(e) => e.stopPropagation()}>\n                <$ButtonSelectGroup>\n                    {'Knob Color: '}\n                    <ColorSelect\n                    setColor={setColor}\n                    index={index}\n                    color={rotaryColor}\n                    colors={index === 0 ? funkyColors : rotaryColors}\n                    type={'rotaryColor'} />\n                </$ButtonSelectGroup>\n                <$ButtonSelectGroup>\n                    {'Sticker Color: '}\n                    <ColorSelect\n                    setColor={setColor}\n                    value={stickerColor}\n                    index={index}\n                    color={stickerColor}\n                    colors={rotaryStickerColors}\n                    type={'stickerColor'} />\n                </$ButtonSelectGroup>\n                <$ButtonSelectGroup>\n                    {'Text Color: '}\n                    <ColorSelect\n                    setColor={setColor}\n                    value={textColor}\n                    index={index}\n                    color={textColor}\n                    colors={textColors}\n                    type={'textColor'} />\n                </$ButtonSelectGroup>\n                <$ButtonSelectGroup>\n                    {'Function: '}\n                    <TextSelect setText={setText}\n                    value={text}\n                    index={index}\n                    text={text}\n                    texts={rotaryTexts} />\n                </$ButtonSelectGroup>\n            </$EditorContainer>\n        );\n    }\n}\n\nexport default RotaryEditor;\n","C:\\Users\\carbo\\Downloads\\GomezStuff\\site\\gsi-wheel-configurator\\src\\save.js",["95"],{"ruleId":"96","severity":1,"message":"97","line":7,"column":8,"nodeType":"98","messageId":"99","endLine":7,"endColumn":13},{"ruleId":"96","severity":1,"message":"100","line":39,"column":7,"nodeType":"98","messageId":"99","endLine":39,"endColumn":16},{"ruleId":"96","severity":1,"message":"101","line":48,"column":7,"nodeType":"98","messageId":"99","endLine":48,"endColumn":17},{"ruleId":"96","severity":1,"message":"102","line":66,"column":7,"nodeType":"98","messageId":"99","endLine":66,"endColumn":19},{"ruleId":"96","severity":1,"message":"103","line":69,"column":7,"nodeType":"98","messageId":"99","endLine":69,"endColumn":20},{"ruleId":"96","severity":1,"message":"104","line":74,"column":7,"nodeType":"98","messageId":"99","endLine":74,"endColumn":25},{"ruleId":"96","severity":1,"message":"105","line":350,"column":11,"nodeType":"98","messageId":"99","endLine":350,"endColumn":21},{"ruleId":"106","severity":1,"message":"107","line":352,"column":7,"nodeType":"108","endLine":352,"endColumn":19},{"ruleId":"109","severity":1,"message":"110","line":362,"column":11,"nodeType":"111","endLine":362,"endColumn":39},{"ruleId":"106","severity":1,"message":"112","line":364,"column":9,"nodeType":"108","endLine":364,"endColumn":100},{"ruleId":"106","severity":1,"message":"113","line":365,"column":11,"nodeType":"108","endLine":365,"endColumn":24},{"ruleId":"106","severity":1,"message":"114","line":382,"column":11,"nodeType":"108","endLine":382,"endColumn":45},{"ruleId":"106","severity":1,"message":"115","line":401,"column":13,"nodeType":"108","endLine":401,"endColumn":31},{"ruleId":"106","severity":1,"message":"116","line":421,"column":11,"nodeType":"108","endLine":421,"endColumn":25},{"ruleId":"106","severity":1,"message":"117","line":425,"column":9,"nodeType":"108","endLine":425,"endColumn":26},{"ruleId":"106","severity":1,"message":"118","line":426,"column":11,"nodeType":"108","endLine":426,"endColumn":55},{"ruleId":"106","severity":1,"message":"119","line":151,"column":13,"nodeType":"108","endLine":160,"endColumn":19},{"ruleId":"106","severity":1,"message":"120","line":161,"column":17,"nodeType":"108","endLine":164,"endColumn":33},{"ruleId":"106","severity":1,"message":"121","line":172,"column":17,"nodeType":"108","endLine":179,"endColumn":76},{"ruleId":"106","severity":1,"message":"122","line":182,"column":29,"nodeType":"108","endLine":182,"endColumn":45},{"ruleId":"106","severity":1,"message":"122","line":196,"column":41,"nodeType":"108","endLine":196,"endColumn":57},{"ruleId":"106","severity":1,"message":"122","line":211,"column":21,"nodeType":"108","endLine":215,"endColumn":131},{"ruleId":"106","severity":1,"message":"123","line":44,"column":13,"nodeType":"108","endLine":44,"endColumn":96},{"ruleId":"106","severity":1,"message":"124","line":45,"column":17,"nodeType":"108","endLine":45,"endColumn":37},{"ruleId":"106","severity":1,"message":"124","line":54,"column":17,"nodeType":"108","endLine":54,"endColumn":37},{"ruleId":"106","severity":1,"message":"124","line":65,"column":17,"nodeType":"108","endLine":65,"endColumn":37},{"ruleId":"106","severity":1,"message":"124","line":75,"column":17,"nodeType":"108","endLine":75,"endColumn":37},{"ruleId":"96","severity":1,"message":"125","line":43,"column":7,"nodeType":"98","messageId":"99","endLine":43,"endColumn":21},{"ruleId":"106","severity":1,"message":"115","line":100,"column":13,"nodeType":"108","endLine":108,"endColumn":20},{"ruleId":"106","severity":1,"message":"120","line":109,"column":17,"nodeType":"108","endLine":113,"endColumn":18},{"ruleId":"106","severity":1,"message":"121","line":121,"column":21,"nodeType":"108","endLine":124,"endColumn":39},{"ruleId":"96","severity":1,"message":"126","line":3,"column":13,"nodeType":"98","messageId":"99","endLine":3,"endColumn":21},{"ruleId":"96","severity":1,"message":"127","line":4,"column":13,"nodeType":"98","messageId":"99","endLine":4,"endColumn":18},{"ruleId":"96","severity":1,"message":"128","line":43,"column":13,"nodeType":"98","messageId":"99","endLine":43,"endColumn":15},{"ruleId":"106","severity":1,"message":"123","line":46,"column":13,"nodeType":"108","endLine":46,"endColumn":96},{"ruleId":"106","severity":1,"message":"124","line":47,"column":17,"nodeType":"108","endLine":47,"endColumn":37},{"ruleId":"106","severity":1,"message":"124","line":56,"column":17,"nodeType":"108","endLine":56,"endColumn":37},{"ruleId":"106","severity":1,"message":"124","line":66,"column":17,"nodeType":"108","endLine":66,"endColumn":37},{"ruleId":"106","severity":1,"message":"124","line":76,"column":17,"nodeType":"108","endLine":76,"endColumn":37},{"ruleId":"106","severity":1,"message":"129","line":43,"column":13,"nodeType":"108","endLine":43,"endColumn":82},"no-unused-vars","'canvg' is defined but never used.","Identifier","unusedVar","'assetPath' is assigned a value but never used.","'$ButtonRow' is assigned a value but never used.","'$LeftButtons' is assigned a value but never used.","'$RightButtons' is assigned a value but never used.","'$ButtonSelectGroup' is assigned a value but never used.","'presetKeys' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component $Container must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","Imported JSX component $ConfigContainer must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component $ConfigLeft must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component $ButtonsContainer must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component $RotaryContainer must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component $ConfigRight must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component $BottomControls must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component $SaveButton must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component $ButtonContainer must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component $StickerContainer must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component $TextContainer must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component $IconContainer must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component $EditorContainer must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component $ButtonSelectGroup must be in PascalCase or SCREAMING_SNAKE_CASE","'$IconContainer' is assigned a value but never used.","'Stickers' is defined but never used.","'Icons' is defined but never used.","'id' is assigned a value but never used.","Imported JSX component $SaveContainer must be in PascalCase or SCREAMING_SNAKE_CASE"]